{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\goirk\\\\dev\\\\stellar-burgers\\\\src\\\\components\\\\app\\\\app.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Loader from \"../loader/loader\";\nimport Modal from \"../modal/modal\";\nimport Overlay from \"../overlay/overlay\";\nimport AppHeader from '../app-header/app-header';\nimport BurgerConstructor from '../burger-constructor/burger-constructor';\nimport BurgerIngredients from '../burger-ingredients/burger-ingredients';\nimport { data } from \"../../utils/data\";\nimport styles from \"./app.module.css\";\nimport OrderDetails from \"../orderDetails/orderDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseUrl = 'https://norma.nomoreparties.space/api/ingredients';\nfunction App() {\n  _s();\n  const [ingredients, setIngredients] = useState(data);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [cardData, setCardData] = useState(null);\n  const [currentModal, setCurrentModal] = useState(null);\n  const openModal = (modalType, data) => {\n    setIsModalOpen(true);\n    setCurrentModal(modalType);\n    setCardData(data);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setCurrentModal(null);\n    setCardData(null);\n  };\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(baseUrl).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }).then(data => setIngredients(data.data)).catch(error => console.log(error)).finally(() => setIsLoading(false));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.app,\n    children: [/*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.main,\n      children: [/*#__PURE__*/_jsxDEV(BurgerIngredients, {\n        ingredients: ingredients,\n        setCardData: setCardData,\n        openModal: openModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BurgerConstructor, {\n        ingredients: ingredients,\n        openModal: openModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        closeModal: closeModal,\n        cardData: cardData,\n        children: /*#__PURE__*/_jsxDEV(OrderDetails, {\n          onClick: closeModal,\n          cardData: cardData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n        setIsModalOpen: setIsModalOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yRibv+xk1fiq511+M3XqWGAG/GQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Loader","Modal","Overlay","AppHeader","BurgerConstructor","BurgerIngredients","data","styles","OrderDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","baseUrl","App","_s","ingredients","setIngredients","isLoading","setIsLoading","isModalOpen","setIsModalOpen","cardData","setCardData","currentModal","setCurrentModal","openModal","modalType","closeModal","fetch","then","res","ok","json","Promise","reject","status","catch","error","console","log","finally","className","app","children","fileName","_jsxFileName","lineNumber","columnNumber","main","onClick","_c","$RefreshReg$"],"sources":["C:/Users/goirk/dev/stellar-burgers/src/components/app/app.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\n\r\nimport Loader from \"../loader/loader\";\r\nimport Modal from \"../modal/modal\";\r\nimport Overlay from \"../overlay/overlay\";\r\n\r\nimport AppHeader from '../app-header/app-header'\r\nimport BurgerConstructor from '../burger-constructor/burger-constructor'\r\nimport BurgerIngredients from '../burger-ingredients/burger-ingredients'\r\n\r\nimport { data } from \"../../utils/data\";\r\n\r\nimport styles from \"./app.module.css\";\r\nimport OrderDetails from \"../orderDetails/orderDetails\";\r\n\r\nconst baseUrl = 'https://norma.nomoreparties.space/api/ingredients'\r\n\r\nfunction App() {\r\n\r\n  const [ingredients, setIngredients] = useState(data)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isModalOpen, setIsModalOpen] = useState(false)\r\n\r\n  const [cardData, setCardData] = useState(null);\r\n  \r\n  const [currentModal, setCurrentModal] = useState(null);\r\n\r\n\r\n\r\n  const openModal = (modalType, data) => {\r\n    setIsModalOpen(true);\r\n    setCurrentModal(modalType);\r\n    setCardData(data);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setCurrentModal(null);\r\n    setCardData(null);\r\n  };\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n\r\n    fetch(baseUrl)\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      })\r\n      .then(data => setIngredients(data.data))\r\n      .catch(error => console.log(error))\r\n      .finally(() => setIsLoading(false) )\r\n  }, [])\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className={styles.app}>\r\n        <AppHeader/>\r\n\r\n        {isLoading ? <Loader />: \r\n          <main className={styles.main}>\r\n          <BurgerIngredients \r\n            ingredients={ingredients} \r\n            setCardData={setCardData}\r\n            openModal={openModal}\r\n          />\r\n          <BurgerConstructor \r\n            ingredients={ingredients} \r\n            openModal={openModal}\r\n          />\r\n        </main>\r\n        } \r\n        {isModalOpen && (\r\n          <>\r\n            <Modal closeModal={closeModal} cardData={cardData}>\r\n              {<OrderDetails onClick={closeModal} cardData={cardData} />}\r\n            </Modal>\r\n            \r\n\r\n            <Overlay setIsModalOpen={setIsModalOpen}/>\r\n          </>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}