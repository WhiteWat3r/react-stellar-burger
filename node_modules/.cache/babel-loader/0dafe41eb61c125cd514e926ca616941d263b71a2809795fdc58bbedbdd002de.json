{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\goirk\\\\dev\\\\stellar-burgers\\\\src\\\\components\\\\app\\\\app.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Loader from \"../loader/loader\";\nimport Modal from \"../modal/modal\";\nimport Overlay from \"../overlay/overlay\";\nimport AppHeader from '../app-header/app-header';\nimport BurgerConstructor from '../burger-constructor/burger-constructor';\nimport BurgerIngredients from '../burger-ingredients/burger-ingredients';\nimport { data } from \"../../utils/data\";\nimport styles from \"./app.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseUrl = 'https://norma.nomoreparties.space/api/ingredients';\nfunction App() {\n  _s();\n  const [ingredients, setIngredients] = useState(data);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [cardData, setCardData] = useState(null);\n  const [currentModal, setCurrentModal] = useState(null);\n  const openModal = (modalType, data) => {\n    setIsModalOpen(true);\n    setCurrentModal(modalType);\n    setCardData(data);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setCurrentModal(null);\n    setCardData(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.app,\n    children: [/*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.main,\n      children: [/*#__PURE__*/_jsxDEV(BurgerIngredients, {\n        ingredients: ingredients,\n        setIngredients: setIngredients,\n        setCardData: setCardData,\n        openModal: openModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BurgerConstructor, {\n        ingredients: ingredients,\n        openModal: openModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        closeModal: closeModal,\n        cardData: cardData,\n        currentModal: currentModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n        setIsModalOpen: setIsModalOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"34XbsXt1zjkr4FFLdMLw2yywq98=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Loader","Modal","Overlay","AppHeader","BurgerConstructor","BurgerIngredients","data","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","baseUrl","App","_s","ingredients","setIngredients","isLoading","setIsLoading","isModalOpen","setIsModalOpen","cardData","setCardData","currentModal","setCurrentModal","openModal","modalType","closeModal","className","app","children","fileName","_jsxFileName","lineNumber","columnNumber","main","_c","$RefreshReg$"],"sources":["C:/Users/goirk/dev/stellar-burgers/src/components/app/app.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\n\r\nimport Loader from \"../loader/loader\";\r\nimport Modal from \"../modal/modal\";\r\nimport Overlay from \"../overlay/overlay\";\r\n\r\nimport AppHeader from '../app-header/app-header'\r\nimport BurgerConstructor from '../burger-constructor/burger-constructor'\r\nimport BurgerIngredients from '../burger-ingredients/burger-ingredients'\r\n\r\nimport { data } from \"../../utils/data\";\r\n\r\nimport styles from \"./app.module.css\";\r\n\r\nconst baseUrl = 'https://norma.nomoreparties.space/api/ingredients'\r\n\r\nfunction App() {\r\n\r\n  const [ingredients, setIngredients] = useState(data)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isModalOpen, setIsModalOpen] = useState(false)\r\n\r\n  const [cardData, setCardData] = useState(null);\r\n  \r\n  const [currentModal, setCurrentModal] = useState(null);\r\n\r\n\r\n\r\n  const openModal = (modalType, data) => {\r\n    setIsModalOpen(true);\r\n    setCurrentModal(modalType);\r\n    setCardData(data);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setCurrentModal(null);\r\n    setCardData(null);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className={styles.app}>\r\n        <AppHeader/>\r\n\r\n        {isLoading ? <Loader />: \r\n          <main className={styles.main}>\r\n          <BurgerIngredients \r\n            ingredients={ingredients} \r\n            setIngredients={setIngredients} \r\n            setCardData={setCardData}\r\n            openModal={openModal}\r\n          />\r\n          <BurgerConstructor \r\n            ingredients={ingredients} \r\n            openModal={openModal}\r\n          />\r\n        </main>\r\n        } \r\n        {isModalOpen && (\r\n          <>\r\n            <Modal closeModal={closeModal} cardData={cardData} currentModal={currentModal}/>\r\n\r\n\r\n            <Overlay setIsModalOpen={setIsModalOpen}/>\r\n          </>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}